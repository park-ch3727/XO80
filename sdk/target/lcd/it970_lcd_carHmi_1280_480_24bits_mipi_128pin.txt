/*
 * MIPI LCD Initialization Script
 *
 * Date          : 2019/12/23
 * Chip Type     : IT970
 * Resolution    : 480x1280
 * Color format  : RGB565
 * LCD interface : 24-bits
 * Build version : LCD initial script editor Ver. 0.0.0.303
 * SHA1 hash     : f8c80336a126df3a22a84b204098d99c81e75a32
 * 
 */

/* ************************************************* */
/*               Please don't remove!                */
/* ************************************************* */
/*@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@*/

/* ************************************************* */
/*     IT970, MIPI Interface mode, Clock Setting     */
/* ************************************************* */
// LP
WRITE(0xD8000048, 0x0002C803);    // KESCCLK
// HS
WRITE(0xD8000028, 0x002AC801);    // DCLK
WRITE(0xD800004C, 0xC002C801);    // KDSICLK
WRITE(0xD8000044, 0xC00AC881);    // KCLK

/* ************************************************* */
/*              PLL3 ck3_n1, 0xD8000000              */
/* ************************************************* */
WRITE(0xD8000120, 0x204B1201);
WRITE(0xD8000124, 0x80000000);
WRITE(0xD8000124, 0xF3000000);
wait(220);                        // IDLE 220
WRITE(0xD8000124, 0x80000000);

// IO output mode
WRITE(0xD0000110, 0x0000000F);    // (0x0000000F DEFAULT VALUE)

/* ************************************************* */
/*     LCD Setting (CPUIF FOR DBI), 0xd000_0000      */
/* ************************************************* */
WRITE(0xD0000004, 0x0F7F0410);    // CPUIF

/* ************************************************* */
/*                       MIPI                        */
/* ************************************************* */
WRITE(0xD800004C, 0x0002C001);    // MIPI controller normal
wait(1);
WRITE(0xD8000048, 0x8002C003);    // DPHY Enable
wait(100);
WRITE(0xD8000044, 0x400AC081);    // DPHY PORn rst normal
wait(75);
WRITE(0xD8000044, 0x1F0AC081);    // DPHY ResetN rst normal, enable P/N swap.
wait(200);

/* ************************************************* */
/*          MIPI DPHY reg base: 0xDC100000           */
/* ************************************************* */
WRITE(0xDC100034, 0x00842164);    // lane swap(default=0x00842164)
WRITE(0xDC10001C, 0x540F5D80);    // pll frange[1:0]
WRITE(0xDC100020, 0x01408064);    // pll frange[2]
WRITE(0xDC10002C, 0x48040300);    // 
wait(150);

/* ************************************************* */
/*          MIPI reg base: 0xd0c00000 (LP)           */
/* ************************************************* */
// ----------LP----------- //
WRITE(0xD0C00004, 0x004F028F);    // $6[7]=BLLP, +$04[0]=EOTPGE
WRITE(0xD0C00010, 0x000F0000);
WRITE(0xD0C00014, 0x0000001B);
wait(10);
wait(150);
// -------MIPI End-------- //
wait(200000);

/* ************************************************* */
/*                   CPUIF Setting                   */
/* ************************************************* */
WRITE(0xD00000F4, 0x50413232);    // CSN,DCN,WRN,RDN
WRITE(0xD00000F8, 0x00000000);    // 8bit cmd, no sync data

// MIPI enable
WRITE(0xD0000230, 0x00000016);    // [0]:MIPI enable,[1]:HsyncValue,[2]:VsyncValue,[3]:DEValue
wait(10);                         // 10 μs
WRITE(0xD0000230, 0x00000017);    // [0]:MIPI enable
wait(5);                          // 5 μs

/* ************************************************* */
/*                MIPI Panel initial                 */
/* ************************************************* */
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0CD);    // cmd 0xCD
wait(1);
WRITE(0xD00000F0, 0x0002B0AA);    // data 0xAA
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A065);    // cmd 0x65
wait(1);
WRITE(0xD00000F0, 0x0002B008);    // data 0x08
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A03A);    // cmd 0x3A
wait(1);
WRITE(0xD00000F0, 0x0002B014);    // data 0x14
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A032);    // cmd 0x32
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00, BIST
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A036);    // cmd 0x36
wait(1);
WRITE(0xD00000F0, 0x0002B002);    // data 0x02
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A067);    // cmd 0x67
wait(1);
WRITE(0xD00000F0, 0x0002B082);    // data 0x82
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A069);    // cmd 0x69
wait(1);
WRITE(0xD00000F0, 0x0002B020);    // data 0x20
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A06D);    // cmd 0x6D
wait(1);
WRITE(0xD00000F0, 0x0002B001);    // data 0x01
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A068);    // cmd 0x68
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A053);    // cmd 0x53
wait(1);
WRITE(0xD00000F0, 0x0002B019);    // data 0x19
wait(1);
WRITE(0xD00000F0, 0x0002B017);    // data 0x17
wait(1);
WRITE(0xD00000F0, 0x0002B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0002B012);    // data 0x12
wait(1);
WRITE(0xD00000F0, 0x0002B012);    // data 0x12
wait(1);
WRITE(0xD00000F0, 0x0002B012);    // data 0x12
wait(1);
WRITE(0xD00000F0, 0x0002B013);    // data 0x13
wait(1);
WRITE(0xD00000F0, 0x0002B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0002B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x0002B00C);    // data 0x0C
wait(1);
WRITE(0xD00000F0, 0x0002B00A);    // data 0x0A
wait(1);
WRITE(0xD00000F0, 0x0002B00A);    // data 0x0A
wait(1);
WRITE(0xD00000F0, 0x0002B00C);    // data 0x0C
wait(1);
WRITE(0xD00000F0, 0x0002B00B);    // data 0x0B
wait(1);
WRITE(0xD00000F0, 0x0002B00C);    // data 0x0C
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B007);    // data 0x07
wait(1);
WRITE(0xD00000F0, 0x0002B006);    // data 0x06
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A054);    // cmd 0x54
wait(1);
WRITE(0xD00000F0, 0x0002B019);    // data 0x19
wait(1);
WRITE(0xD00000F0, 0x0002B016);    // data 0x16
wait(1);
WRITE(0xD00000F0, 0x0002B014);    // data 0x14
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B013);    // data 0x13
wait(1);
WRITE(0xD00000F0, 0x0002B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0002B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x0002B00B);    // data 0x0B
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B00B);    // data 0x0B
wait(1);
WRITE(0xD00000F0, 0x0002B00B);    // data 0x0B
wait(1);
WRITE(0xD00000F0, 0x0002B00C);    // data 0x0C
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B007);    // data 0x07
wait(1);
WRITE(0xD00000F0, 0x0002B006);    // data 0x06
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A029);    // cmd 0x29
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A02A);    // cmd 0x2A
wait(1);
WRITE(0xD00000F0, 0x0002B00C);    // data 0x0C
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A06C);    // cmd 0x6C
wait(1);
WRITE(0xD00000F0, 0x0002B081);    // data 0x81
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A055);    // cmd 0x55
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A056);    // cmd 0x56
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A057);    // cmd 0x57
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A030);    // cmd 0x30
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A039);    // cmd 0x39
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A033);    // cmd 0x33
wait(1);
WRITE(0xD00000F0, 0x0002B008);    // data 0x08
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A035);    // cmd 0x35
wait(1);
WRITE(0xD00000F0, 0x0002B025);    // data 0x25, 0x25 謗萸楹蛌ㄛ0x27 蹈楹蛌
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A04F);    // cmd 0x4F
wait(1);
WRITE(0xD00000F0, 0x0002B03D);    // data 0x3D
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A04E);    // cmd 0x4E
wait(1);
WRITE(0xD00000F0, 0x0002B035);    // data 0x35
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A041);    // cmd 0x41
wait(1);
WRITE(0xD00000F0, 0x0002B035);    // data 0x35, vcom  3A
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A073);    // cmd 0x73
wait(1);
WRITE(0xD00000F0, 0x0002B030);    // data 0x30
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A074);    // cmd 0x74
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A076);    // cmd 0x76
wait(1);
WRITE(0xD00000F0, 0x0002B040);    // data 0x40
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A077);    // cmd 0x77
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A028);    // cmd 0x28
wait(1);
WRITE(0xD00000F0, 0x0002B031);    // data 0x31
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A07C);    // cmd 0x7C
wait(1);
WRITE(0xD00000F0, 0x0002B080);    // data 0x80
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A02E);    // cmd 0x2E
wait(1);
WRITE(0xD00000F0, 0x0002B004);    // data 0x04, PWM
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A04C);    // cmd 0x4C
wait(1);
WRITE(0xD00000F0, 0x0002B080);    // data 0x80, VCSW1
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A047);    // cmd 0x47
wait(1);
WRITE(0xD00000F0, 0x0002B016);    // data 0x16, VGH  14
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A048);    // cmd 0x48
wait(1);
WRITE(0xD00000F0, 0x0002B06A);    // data 0x6A, VGL  63
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A050);    // cmd 0x50
wait(1);
WRITE(0xD00000F0, 0x0002B0C0);    // data 0xC0
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A078);    // cmd 0x78
wait(1);
WRITE(0xD00000F0, 0x0002B06E);    // data 0x6E
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A02D);    // cmd 0x2D
wait(1);
WRITE(0xD00000F0, 0x0002B031);    // data 0x31
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A063);    // cmd 0x63
wait(1);
WRITE(0xD00000F0, 0x0002B004);    // data 0x04
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A04D);    // cmd 0x4D
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10050017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A011);    // cmd 0x11
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);
wait(120000);                        // delay 120000μs

/* ************************************************* */
/*         LCD Register Setting, 0xd000_0000         */
/* ************************************************* */
WRITE(0xD0000000, 0x40000070);    // DRAM mode, dclk, Falling latch
WRITE(0xD0000004, 0x0F7F0A60);    // SRC:RGB565, dst 24-bits
WRITE(0xD0000008, 0x01E00500);    // Layer1:W1280xH480
WRITE(0xD000000C, 0x00000A00);    // pitch=1280 X 2=2560
WRITE(0xD0000010, 0x00000000);    // baseA addr
WRITE(0xD0000014, 0x00000000);    // baseB addr
WRITE(0xD0000018, 0x00000000);    // baseC addr

/* ************************************************* */
/*                  Test Color Mode                  */
/* ************************************************* */
WRITE(0xD0000020, 0x800000FF);    // test color mode=0, None

/* ************************************************* */
/*                    CTG Setting                    */
/*    HS:24, HBP:60, HFP:60, VS:2, VBP:10, VFP:12    */
/* ************************************************* */
WRITE(0xD0000070, 0x00010300);    // ctg_reset_on
wait(1);                          // 1 μs
WRITE(0xD0000070, 0x00000300);    // ctg_reset_off

WRITE(0xD0000070, 0x00000307);    // enable ctg 0 1 2
WRITE(0xD0000074, 0x05180270);    // htotal=0x0270, vtotal=0x0518

//CTG0 (Hsync)
WRITE(0xD0000078, 0x20010270);    // set0,p1, line x=htotal,        y=1
WRITE(0xD000007C, 0x10010018);    // set1,p2       x=HOR.SYNC TIME, y=1
WRITE(0xD0000080, 0x00000000);    // set1,p3(0x0,0)
WRITE(0xD0000084, 0x00000000);    // set0,p4(0x0,0)

//CTG1 (Vsync)
WRITE(0xD0000088, 0x60010270);    // set0,p1 ,frame  x=htotal, y=1
WRITE(0xD000008C, 0x10030270);    // set1,p2         x=htotal, y=VER.SYNC TIME+1
WRITE(0xD0000090, 0x00000000);    // set1,p3(0x0,0)
WRITE(0xD0000094, 0x00000000);    // set0,p4(0x0,0)

//CTG2 (DE)
WRITE(0xD0000098, 0x100E0054);    // set1,p1, line
WRITE(0xD000009C, 0x250E0234);    // set0,p2 x=HOR.SYNC TIME+HBP+Hor. display area y=(VER.SYNC TIME+1)+VBP+1+Ver. display area
WRITE(0xD00000A0, 0x100E0054);    // set1,p3
WRITE(0xD00000A4, 0x250E0234);    // set0,p4

/* ************************************************* */
/*         MIPI reg base: 0xd0c00000   (HS)          */
/* ************************************************* */
//----------HS-----------//
WRITE(0xD0C00004, 0x004F028E);    // 0x6[7]=BLLP, +0x04[0]=EOTPGE
WRITE(0xD0C00008, 0x00640064);
WRITE(0xD0C00010, 0x000F0000);
WRITE(0xD0C00014, 0x0000003E);    // RGB666(0x1E),RGB888(0x3E)
WRITE(0xD0C00018, 0x00241016);    // +0x18[5:0]=CLWR
WRITE(0xD0C0001C, 0x00000000);    // 24-bits pixel
WRITE(0xD0C00020, 0x000001E0);    // HACT=480(0x01E0)
WRITE(0xD0C00028, 0x000005A0);    // 480*3(0x05A0)
// Write d0c0003c 000000ff f
WRITE(0xD0C00048, 0x00000005);    // +0x48[6]=HSE Pkt
// Write d0c00050 000006a0 f
WRITE(0xD0C00054, 0x00000000);    // HSS(4)+HSA*3+HSE(4)+HBP*3+4+HACT*3+2+HFP*3
WRITE(0xD0C00058, 0x00000010);
WRITE(0xD0C00080, 0x000A0002);    // VBP=10(0x0A), VSA=2(0x02)
WRITE(0xD0C00084, 0x0500000C);    // VACT=1280(0x500), VFP=12(0x0C)
WRITE(0xD0C00088, 0x032C0000);    // HBP=60*3(0x00B4), HSA=24*3(0x48)
WRITE(0xD0C0008C, 0x00000000);    // HFP=60*3(0x00B4)

WRITE(0xD0C00050, 0x00000000);    // pixel fifo threshold

wait(10);
wait(150);

/* ************************************************* */
/*                PWM: GPIO assign 1                 */
/*            MUST check GPIO mode select            */
/* ************************************************* */
// GPIO18 (PWM2)
// WRITE(0xD1000008, 0x00040000);    // GPIO[31:0] GPIO18 set dir output
// WRITE(0xD1000000, 0x00040000);    // GPIO[31:0] GPIO18 set high

// GPIO19 (PWM3)
// WRITE(0xD1000008, 0x00080000);    // GPIO[31:0] GPIO19 set dir output
// WRITE(0xD1000000, 0x00080000);    // GPIO[31:0] GPIO19 set high

// GPIO20 (PWM4)
// WRITE(0xD1000008, 0x00100000);    // GPIO[31:0] GPIO20 set dir output
// WRITE(0xD1000000, 0x00100000);    // GPIO[31:0] GPIO20 set high

// GPIO21 (PWM5)
// WRITE(0xD1000008, 0x00200000);    // GPIO[31:0] GPIO21 set dir output
// WRITE(0xD1000000, 0x00200000);    // GPIO[31:0] GPIO21 set high

// GPIO22 (PWM6)
// WRITE(0xD1000008, 0x00400000);    // GPIO[31:0] GPIO22 set dir output
// WRITE(0xD1000000, 0x00400000);    // GPIO[31:0] GPIO22 set high

// GPIO59 (PWM4)
// WRITE(0xD1000088, 0x08000000);    // GPIO[63:32] GPIO59 set dir output
// WRITE(0xD1000080, 0x08000000);    // GPIO[63:32] GPIO59 set high
// WRITE(0xD10000EC, 0x00000000);    // GPIO[63:56]

// GPIO85 (PWM4)
// WRITE(0xD1000108, 0x00200000);    // GPIO[95:64] GPIO85 set dir output
// WRITE(0xD1000100, 0x00200000);    // GPIO[95:64] GPIO85 set high
// WRITE(0xD1000168, 0x00000000);    // GPIO[87:80]

// GPIO95 (PWM1)
// WRITE(0xD1000108, 0x80000000);    // GPIO[95:64] GPIO95 set dir output
// WRITE(0xD1000100, 0x80000000);    // GPIO[95:64] GPIO95 set high
// WRITE(0xD100016C, 0x00000000);    // GPIO[95:88]

// -------MIPI End-------- //

/* ************************************************* */
/*                    Enable LCD                     */
/* ************************************************* */
WRITE(0xD000001C, 0x00000001);    // SyncEn
wait(1);                          // 1 μs
WRITE(0xD000001C, 0x00000003);    // SyncEn DisplayEn
