/*
 * MIPI LCD Initialization Script
 *
 * Date          : 2019/5/21
 * Chip Type     : IT970
 * Resolution    : 480x854
 * Color format  : RGB565
 * LCD interface : 24-bits
 * Build version : LCD initial script editor Ver. 0.0.0.290
 * SHA1 hash     : 1de50c411f59385bc11f935bdc21dd6bb971a77f
 * 
 */

/* ************************************************* */
/*               Please don't remove!                */
/* ************************************************* */
/*@UEsDBBQAAAAIAAGEtU5umbmr1QYAAHQaAAALAAAAc2V0dGluZy5pbmnFWNtu2zgQfQ+QfxD6lKBMw5sku4AerIvVoI7XkNPsLtrCUB0lNerYge2gzV/tN+yXLcmRrRFl5bLBYp3IJA8PhzMjkjP05ywNvx4eDJJRvijm0Xw5/RHw7jv38CBK02JRrPJ5VtwIGjALYQ2ENxARUC36Qzxb383zh96qyAPZMdglxjquPDzI0mg5X64uHu4KPSxL4/WmQrhGLooSOl9eGVKUxsW3+xs9sZrmYrnJ54HrSdNarsYPi+nF7LYIAAjz6Y/RcjX9HkhQq79aLjYYuQQJHd8zraKSwA1QSWDARxI0Mk4GUfxh/H12vQm2zctdM/o+uzO2nF10fWOh8n2mZtwoW/7+qwb057O7YLhcFBodqWnzm8KM/bQuVidXxfVsUVypGfSI0Wxxfv9L+WVNA6I/ISUhIyEnoSChJKFLQo+EPkkpSRlJOUkFSSVJXZJ6JPVJRknGSMZJJkgmSeaSzCOZ3xDPAjKIo8FHMrgc/zmMyOADFHEyVF9UPUw9XD1CPVI9rno89fjq6ainqzmGqJlMU5nmMk1mms00nWk+0wOYHsH1CG5k6xFcNDTjwRuSjs5+k4p5GY9HZcFMMeSmz/Wh6EDRNYVHoWBQcBgAw4cASmC6wHQBdEuZAgoJhQuFB+PK4cCUwJTAlMCUJRM0k5035JFPw2ihjBaEPetPlH9l+4mJolC/5rhQ+3NcbDazxY1ev4cHn6PRp69mp44+nfXt9TxIDIwOEiHeiYqOd3cE2NlCLeeN3mVxvsmDSkjtyBC86rhsnCWlKDgIKJru9jZfXIWzDQJjdYCMl/eraVEdM5XSWofwfo3U2GnGI72dQfDtVXB6OjpJczXBl9WXxfT2yqG/GHOc01MnOo8nesR7xiZUfTThav7gMK5bhvIzn210+3atOysJoleXIHoTzyMO9/hHZ3ntqHdvhOUbxfU8NM4z44Q3KaczDKhXrJAbVsgnNCL6nxKhVoRAI6KWOpKK+VBHM/gwgz8RLmK5iBECI5xwv2JAHRgRuCiiE440gHrJADsiZQdDOjLEEMAQE440h3rJkMCQ7QzwaaR82kez9CtGDJrGdNKTPaRJT6I60ioGvWM+kcgyqFesBKQmdNKnjLKQ9h3apx2RSOnIhIbMZz2HM44m6SMTGK6HtuJ76h30ohKkFpIvEU6RTIZeIeshNyJngJ7IPNgkCduaFzs0oZ6I3deZF6M6VtdD5iGO+x+Zx2F989BsfUqTvuOsi41zp08X59v99XWxch6cwOGSHqkgnt/PN+/V6Xa8f7O11ZO+NW23fnDwbnX0tAjCg3VdHaP6bKtnIwhC+QigzVxsd5JWyYoODJ6OW9CD8xRIJH7Pji7HxyQbH33QRXwUJ8dPphK1iGhJVinK02H25WH9sSl50Bp10TAVPHVOYVJtk5tUUdJl77gOYxqukucy466DbB/IIWBpsBY2GeVy21ELmx41r0vjVsqtoWbardE9qbchV+m3mR8SaCbkbmach/NKUZRKywrF+bS3g8u03BPuDkGpudiBlcxqolqKzk1OrifCObpm7dqlWxqpukbru6NC8OYw8Gg4/pnfabeMoW0Wy0X+bV5sl79GJaSZUIwEtKAY8W3qihNZhrPbIW0Rr/ZA9sfZkJ5A8dYUDFoMWhxaXLfUPjyBAvoE9Im3ZtGen43OTMqnK023GLS+hjTUXEMa3XNkGLI6swZqOwTcmaviSG3/mB1ve+tOrxDk9EGi4cYFdmxg60ZWQtULh8H7rqgab15TS37trmmYtbuj4dg3UEOzL5WGaV9NDdi4nprx9h3UgI17aOUQla3CQd9Hcd9Hwa2WRrUEDWYFjQhHoy4aY6WEEZLN8Dzc4nEUqDGvY/Gidp3CtoDn7deBoTkZyoNor6Xe3V9ncQsubV2bCUpNn65lT9t7abMH190WvcOn7eGixR6/xTbkO5a02/Oq9cfa37WM2/0melYfeufUt/qQ3R17bSF/SnscsqXjWn3IN9y2AfvW3l/IBt/eA7y9L0Z+6Vh9yTMyS3tfJo29uGdMrwX3W/Du03o8ds1M+DPs+F/rSFfxSlvxRaVRRzy839Ee9NA8vf7+Oj6bnsPH7/tZ/Oi5fGSP90q/+c/0G17T8Qvt6r+Q330hP/wXfsPnO94naB/jNdW2vrCfpb2mo8fmQDzkzx7Sq4P84KP3jC/lWF8cN15Tx+tcov3iobXSReshtGLHa+KXfS6UsVr/LujuvY/rLujRv8ZW2dx5DDdAkzdvf/GEZuPqWAfZPtBcHUv5cGfZteMyK9+i43LO9bS8Y+iPujRMRuZ7qHJ2VVVfqkZ1jU6GW1nju2I6y+dRvjZp/z9QSwECFAAUAAAACAABhLVObpm5q9UGAAB0GgAACwAAAAAAAAAAACAAAAAAAAAAc2V0dGluZy5pbmlQSwUGAAAAAAEAAQA5AAAA/gYAAAAA@*/

/* ************************************************* */
/*     IT970, MIPI Interface mode, Clock Setting     */
/* ************************************************* */
// LP
WRITE(0xD8000048, 0x0002C804);    // KESCCLK
// HS
WRITE(0xD8000028, 0x002AC802);    // DCLK
WRITE(0xD800004C, 0xC002C802);    // KDSICLK
WRITE(0xD8000044, 0xC00AC881);    // KCLK

/* ************************************************* */
/*              PLL3 ck3_n1, 0xD8000000              */
/* ************************************************* */
WRITE(0xD8000120, 0x20450E01);
WRITE(0xD8000124, 0x80000000);
WRITE(0xD8000124, 0xF3000000);
wait(220);                        // IDLE 220
WRITE(0xD8000124, 0x80000000);

// IO output mode
WRITE(0xD0000110, 0x0000000F);    // (0x0000000F DEFAULT VALUE)

/* ************************************************* */
/*     LCD Setting (CPUIF FOR DBI), 0xd000_0000      */
/* ************************************************* */
WRITE(0xD0000004, 0x0F7F0410);    // CPUIF

/* ************************************************* */
/*             Port Setting 0xD000_0000              */
/*    HS:4, HBP:40, HFP:40, VS:2, VBP:10, VFP:10     */
/* ************************************************* */
// MIPI enable
WRITE(0xD0000230, 0x00000016);    // [0]:MIPI enable,[1]:HsyncValue,[2]:VsyncValue,[3]:DEValue
wait(10);                         // 10 £gs
WRITE(0xD0000230, 0x00000017);    // [0]:MIPI enable
wait(5);                          // 5 £gs

/* ************************************************* */
/*                       MIPI                        */
/* ************************************************* */
WRITE(0xD800004C, 0x0002C002);    // MIPI controller normal
wait(1);
WRITE(0xD8000048, 0x8002C004);    // DPHY Enable
wait(100);
WRITE(0xD8000044, 0x400AC081);    // DPHY PORn rst normal
wait(75);
WRITE(0xD8000044, 0x000AC081);    // DPHY ResetN rst normal
wait(200);

/* ************************************************* */
/*          MIPI DPHY reg base: 0xDC100000           */
/* ************************************************* */
WRITE(0xDC100034, 0x00842164);    // lane swap default
WRITE(0xDC10001C, 0x540F5D80);    // pll frange[1:0]
WRITE(0xDC100020, 0x01408064);    // pll frange[2]
WRITE(0xDC10002C, 0x48050200);    // 
wait(150);

/* ************************************************* */
/*          MIPI reg base: 0xd0c00000 (LP)           */
/* ************************************************* */
// ----------LP----------- //
WRITE(0xD0C00004, 0x004F028F);    // $6[7]=BLLP, +$04[0]=EOTPGE
WRITE(0xD0C00010, 0x000F0000);
WRITE(0xD0C00014, 0x0000001B);
wait(10);
wait(150);
// -------MIPI End-------- //
wait(200000);

/* ************************************************* */
/*                   CPUIF Setting                   */
/* ************************************************* */
WRITE(0xD00000F4, 0x50413232);    // CSN,DCN,WRN,RDN
WRITE(0xD00000F8, 0x00000000);    // 8bit cmd, no sync data

/* ************************************************* */
/*                MIPI Panel initial                 */
/* ************************************************* */
WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0FF);    // cmd 0xFF
wait(1);
WRITE(0xD00000F0, 0x0002B077);    // data 0x77
wait(1);
WRITE(0xD00000F0, 0x0002B001);    // data 0x01
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0C0);    // cmd 0xC0
wait(1);
WRITE(0xD00000F0, 0x0002B0E9);    // data 0xE9
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0C1);    // cmd 0xC1
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B002);    // data 0x02
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0C2);    // cmd 0xC2
wait(1);
WRITE(0xD00000F0, 0x0002B031);    // data 0x31
wait(1);
WRITE(0xD00000F0, 0x0002B008);    // data 0x08
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0CC);    // cmd 0xCC
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0B0);    // cmd 0xB0
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B006);    // data 0x06
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B012);    // data 0x12
wait(1);
WRITE(0xD00000F0, 0x0002B018);    // data 0x18
wait(1);
WRITE(0xD00000F0, 0x0002B00A);    // data 0x0A
wait(1);
WRITE(0xD00000F0, 0x0002B00A);    // data 0x0A
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B01D);    // data 0x1D
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B014);    // data 0x14
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x0002B00E);    // data 0x0E
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B019);    // data 0x19
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0B1);    // cmd 0xB1
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B006);    // data 0x06
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B00B);    // data 0x0B
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B023);    // data 0x23
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B017);    // data 0x17
wait(1);
WRITE(0xD00000F0, 0x0002B014);    // data 0x14
wait(1);
WRITE(0xD00000F0, 0x0002B018);    // data 0x18
wait(1);
WRITE(0xD00000F0, 0x0002B01E);    // data 0x1E
wait(1);
WRITE(0xD00000F0, 0x0002B019);    // data 0x19
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0FF);    // cmd 0xFF
wait(1);
WRITE(0xD00000F0, 0x0002B077);    // data 0x77
wait(1);
WRITE(0xD00000F0, 0x0002B001);    // data 0x01
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0B0);    // cmd 0xB0
wait(1);
WRITE(0xD00000F0, 0x0002B04D);    // data 0x4D
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0B1);    // cmd 0xB1
wait(1);
WRITE(0xD00000F0, 0x0002B03A);    // data 0x3A
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0B2);    // cmd 0xB2
wait(1);
WRITE(0xD00000F0, 0x0002B007);    // data 0x07
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0B3);    // cmd 0xB3
wait(1);
WRITE(0xD00000F0, 0x0002B080);    // data 0x80
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0B5);    // cmd 0xB5
wait(1);
WRITE(0xD00000F0, 0x0002B047);    // data 0x47
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0B7);    // cmd 0xB7
wait(1);
WRITE(0xD00000F0, 0x0002B085);    // data 0x85
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0B8);    // cmd 0xB8
wait(1);
WRITE(0xD00000F0, 0x0002B021);    // data 0x21
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0B9);    // cmd 0xB9
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0C1);    // cmd 0xC1
wait(1);
WRITE(0xD00000F0, 0x0002B078);    // data 0x78
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0C2);    // cmd 0xC2
wait(1);
WRITE(0xD00000F0, 0x0002B078);    // data 0x78
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A0D0);    // cmd 0xD0
wait(1);
WRITE(0xD00000F0, 0x0002B088);    // data 0x88
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0E0);    // cmd 0xE0
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B002);    // data 0x02
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0E1);    // cmd 0xE1
wait(1);
WRITE(0xD00000F0, 0x0002B008);    // data 0x08
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B00A);    // data 0x0A
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B007);    // data 0x07
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0E2);    // cmd 0xE2
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0E3);    // cmd 0xE3
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0E4);    // cmd 0xE4
wait(1);
WRITE(0xD00000F0, 0x0002B044);    // data 0x44
wait(1);
WRITE(0xD00000F0, 0x0002B044);    // data 0x44
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0E5);    // cmd 0xE5
wait(1);
WRITE(0xD00000F0, 0x0002B00E);    // data 0x0E
wait(1);
WRITE(0xD00000F0, 0x0002B060);    // data 0x60
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x0002B060);    // data 0x60
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B00A);    // data 0x0A
wait(1);
WRITE(0xD00000F0, 0x0002B060);    // data 0x60
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B00C);    // data 0x0C
wait(1);
WRITE(0xD00000F0, 0x0002B060);    // data 0x60
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0E6);    // cmd 0xE6
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0E7);    // cmd 0xE7
wait(1);
WRITE(0xD00000F0, 0x0002B044);    // data 0x44
wait(1);
WRITE(0xD00000F0, 0x0002B044);    // data 0x44
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0E8);    // cmd 0xE8
wait(1);
WRITE(0xD00000F0, 0x0002B00D);    // data 0x0D
wait(1);
WRITE(0xD00000F0, 0x0002B060);    // data 0x60
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B060);    // data 0x60
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B060);    // data 0x60
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B00B);    // data 0x0B
wait(1);
WRITE(0xD00000F0, 0x0002B060);    // data 0x60
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x0002B0AF);    // data 0xAF
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0EB);    // cmd 0xEB
wait(1);
WRITE(0xD00000F0, 0x0002B002);    // data 0x02
wait(1);
WRITE(0xD00000F0, 0x0002B001);    // data 0x01
wait(1);
WRITE(0xD00000F0, 0x0002B0E4);    // data 0xE4
wait(1);
WRITE(0xD00000F0, 0x0002B0E4);    // data 0xE4
wait(1);
WRITE(0xD00000F0, 0x0002B044);    // data 0x44
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B040);    // data 0x40
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0EC);    // cmd 0xEC
wait(1);
WRITE(0xD00000F0, 0x0002B002);    // data 0x02
wait(1);
WRITE(0xD00000F0, 0x0002B001);    // data 0x01
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0ED);    // cmd 0xED
wait(1);
WRITE(0xD00000F0, 0x0002B0AB);    // data 0xAB
wait(1);
WRITE(0xD00000F0, 0x0002B089);    // data 0x89
wait(1);
WRITE(0xD00000F0, 0x0002B076);    // data 0x76
wait(1);
WRITE(0xD00000F0, 0x0002B054);    // data 0x54
wait(1);
WRITE(0xD00000F0, 0x0002B001);    // data 0x01
wait(1);
WRITE(0xD00000F0, 0x0002B0FF);    // data 0xFF
wait(1);
WRITE(0xD00000F0, 0x0002B0FF);    // data 0xFF
wait(1);
WRITE(0xD00000F0, 0x0002B0FF);    // data 0xFF
wait(1);
WRITE(0xD00000F0, 0x0002B0FF);    // data 0xFF
wait(1);
WRITE(0xD00000F0, 0x0002B0FF);    // data 0xFF
wait(1);
WRITE(0xD00000F0, 0x0002B0FF);    // data 0xFF
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x0002B045);    // data 0x45
wait(1);
WRITE(0xD00000F0, 0x0002B067);    // data 0x67
wait(1);
WRITE(0xD00000F0, 0x0002B098);    // data 0x98
wait(1);
WRITE(0xD00000F0, 0x0002B0BA);    // data 0xBA
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0FF);    // cmd 0xFF
wait(1);
WRITE(0xD00000F0, 0x0002B077);    // data 0x77
wait(1);
WRITE(0xD00000F0, 0x0002B001);    // data 0x01
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10050017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A011);    // cmd 0x11
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);
wait(150);                        // delay 150£gs

WRITE(0xD0000230, 0x10050017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A029);    // cmd 0x29
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);
wait(50);                         // delay 50£gs

/* ************************************************* */
/*         LCD Register Setting, 0xd000_0000         */
/* ************************************************* */
WRITE(0xD0000000, 0x00000071);    // DRAM mode, dclk, Falling latch
WRITE(0xD0000004, 0x0F7F0A60);    // SRC:RGB565, dst 24-bits
WRITE(0xD0000008, (${CFG_LCD_HEIGHT}<<16) | ${CFG_LCD_WIDTH});
WRITE(0xD000000C, ${CFG_LCD_PITCH});
WRITE(0xD0000010, ${CFG_LCDA_ADDR});
WRITE(0xD0000014, ${CFG_LCDA_ADDR});
WRITE(0xD0000018, ${CFG_LCDA_ADDR});

/* ************************************************* */
/*                  Test Color Mode                  */
/* ************************************************* */
WRITE(0xD0000020, 0x800000FF);    // test color mode=0, None

/* ************************************************* */
/*                    CTG Setting                    */
/* ************************************************* */
WRITE(0xD0000070, 0x00010300);    // ctg_reset_on
wait(1);                          // 1 £gs
WRITE(0xD0000070, 0x00000300);    // ctg_reset_off

WRITE(0xD0000070, 0x00000307);    // enable ctg 0 1 2
WRITE(0xD0000074, 0x036C0234);    // htotal=0x0234, vtotal=0x036C

//CTG0 (Hsync)
WRITE(0xD0000078, 0x20010234);    // set0,p1, line x=htotal,        y=1
WRITE(0xD000007C, 0x10010004);    // set1,p2       x=HOR.SYNC TIME, y=1
WRITE(0xD0000080, 0x00000000);    // set1,p3(0x0,0)
WRITE(0xD0000084, 0x00000000);    // set0,p4(0x0,0)

//CTG1 (Vsync)
WRITE(0xD0000088, 0x60010234);    // set0,p1 ,frame  x=htotal, y=1
WRITE(0xD000008C, 0x10030234);    // set1,p2         x=htotal, y=VER.SYNC TIME+1
WRITE(0xD0000090, 0x00000000);    // set1,p3(0x0,0)
WRITE(0xD0000094, 0x00000000);    // set0,p4(0x0,0)

//CTG2 (DE)
WRITE(0xD0000098, 0x100E002C);    // set1,p1, line
WRITE(0xD000009C, 0x2364020C);    // set0,p2 x=HOR.SYNC TIME+HBP+Hor. display area y=(VER.SYNC TIME+1)+VBP+1+Ver. display area
WRITE(0xD00000A0, 0x100E002C);    // set1,p3
WRITE(0xD00000A4, 0x2364020C);    // set0,p4

/* ************************************************* */
/*         MIPI reg base: 0xd0c00000   (HS)          */
/* ************************************************* */
//----------HS-----------//
WRITE(0xD0C00004, 0x0043028E);    // 0x6[7]=BLLP, +0x04[0]=EOTPGE
WRITE(0xD0C00008, 0x00640064);
WRITE(0xD0C00010, 0x000F0000);
WRITE(0xD0C00014, 0x0000003E);    // RGB666(0x1E),RGB888(0x3E)
WRITE(0xD0C00018, 0x0024100E);    // +0x18[5:0]=CLWR
WRITE(0xD0C0001C, 0x00000000);    // 24-bits pixel
WRITE(0xD0C00020, 0x000001E0);    // HACT=480(0x01E0)
WRITE(0xD0C00028, 0x000005A0);    // 480*3(0x05A0)
// Write d0c0003c 000000ff f
WRITE(0xD0C00048, 0x00000005);    // +0x48[6]=HSE Pkt
// Write d0c00050 000006a0 f
WRITE(0xD0C00054, 0x00000000);    // HSS(4)+HSA*3+HSE(4)+HBP*3+4+HACT*3+2+HFP*3
WRITE(0xD0C00058, 0x00000010);
WRITE(0xD0C00080, 0x000A0002);    // VBP=10(0x0A), VSA=2(0x02)
WRITE(0xD0C00084, 0x0356000A);    // VACT=854(0x356), VFP=10(0x0A)
WRITE(0xD0C00088, 0x02A00000);    // HBP=40*3(0x0078), HSA=4*3(0x0C)
WRITE(0xD0C0008C, 0x00000000);    // HFP=40*3(0x0078)

WRITE(0xD0C00050, 0x00000000);    // pixel fifo threshold

wait(10);
wait(150);

// -------MIPI End-------- //

/* ************************************************* */
/*                    Enable LCD                     */
/* ************************************************* */
WRITE(0xD000001C, 0x00000001);    // SyncEn
wait(1);                          // 1 £gs
WRITE(0xD000001C, 0x00000003);    // SyncEn DisplayEn
